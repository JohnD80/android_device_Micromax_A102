From 866d17680b15ab90ee638e19af19b58cab1e2ab9 Mon Sep 17 00:00:00 2001
From: LineageOS-MTK <luzejij@binka.me>
Date: Wed, 10 May 2017 15:45:39 +0300
Subject: [PATCH] Use hw encoder only for camera

---
 media/libmediaplayerservice/StagefrightRecorder.cpp |  8 ++++++++
 media/libstagefright/MediaCodecSource.cpp           |  6 ++++++
 media/libstagefright/OMXCodec.cpp                   | 11 +++++++++++
 3 files changed, 25 insertions(+)

diff --git a/media/libmediaplayerservice/StagefrightRecorder.cpp b/media/libmediaplayerservice/StagefrightRecorder.cpp
index 442dba1a9..d5b9576c1 100644
--- a/media/libmediaplayerservice/StagefrightRecorder.cpp
+++ b/media/libmediaplayerservice/StagefrightRecorder.cpp
@@ -1613,6 +1613,14 @@ status_t StagefrightRecorder::setupVideoEncoder(
             break;
     }
 
+	// force hw video encoder for camera
+    if (mVideoSource == VIDEO_SOURCE_CAMERA) {
+        AString mime;
+        CHECK(format->findString("mime", &mime));
+        mime.append("_cam");
+        format->setString("mime", mime);
+    }
+
     if (cameraSource != NULL) {
         sp<MetaData> meta = cameraSource->getFormat();
 
diff --git a/media/libstagefright/MediaCodecSource.cpp b/media/libstagefright/MediaCodecSource.cpp
index 14a3c0d74..60b02e320 100644
--- a/media/libstagefright/MediaCodecSource.cpp
+++ b/media/libstagefright/MediaCodecSource.cpp
@@ -411,6 +411,12 @@ status_t MediaCodecSource::initEncoder() {
             mCodecLooper, outputMIME.c_str(), true /* encoder */);
     }
 
+	// remove camera tag from mime
+    if (outputMIME.endsWith("_cam")) {
+        outputMIME.erase(outputMIME.size() - 4, 4);
+        mOutputFormat->setString("mime", outputMIME);
+    }
+
     if (mEncoder == NULL) {
         return NO_INIT;
     }
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index de00ff282..43c60c636 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -214,6 +214,17 @@ void OMXCodec::findMatchingCodecs(
         return;
     }
 
+	AString *tempMime = new AString(mime);
+    if (tempMime->endsWith("_cam")) {
+        // remove camera tag from mime
+        tempMime->erase(tempMime->size() - 4, 4);
+        mime = tempMime->c_str();
+    }
+    else {
+        // no camera recording, prefer software codecs
+        flags |= kPreferSoftwareCodecs;
+    }
+
     size_t index = 0;
     for (;;) {
         ssize_t matchIndex =
